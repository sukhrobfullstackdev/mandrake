import { WalletType } from '@custom-types/wallet';
import {
  LogoArbitrum,
  LogoArbitrumOne,
  LogoBase,
  LogoBnb,
  LogoChiliz,
  LogoEthereum,
  LogoEtherlink,
  LogoFlow,
  LogoOptimism,
  LogoPoa,
  LogoPolygon,
  LogoStability,
  LogoTezos,
  LogoZetachain,
  LogoZksync,
} from '@magiclabs/ui-components';
import { ElementType } from 'react';

interface IChainInfo {
  chainId: number;
  currency: string;
  onramperCurrency: string;
  name: string;
  network: string;
  isMainnet: boolean;
  networkName: string;
  tokenCompatibility: string;
  blockExplorer: string;
  tokenIcon: ElementType;
  blockchainIcon: unknown;
  faucetUrl?: string;
  gasStationUrl?: string;
}

export interface IChainInfoEvm extends IChainInfo {
  minDefaultGasLimit: number;
  maxDefaultGasLimit: number;
  transactionFormat: string;
}

export interface IChainInfoFlow extends IChainInfo {}

export const NETWORK_NAMES = {
  ETHEREUM: 'Ethereum',
  GOERLI: 'Goerli Testnet',
  SEPOLIA: 'Sepolia Testnet',
  POLYGON: 'Polygon',
  POLYGON_MUMBAI: 'Polygon Mumbai Testnet',
  POLYGON_AMOY: 'Polygon Amoy Testnet',
  OPTIMISM: 'Optimism',
  OPTIMISM_GOERLI: 'Optimism Goerli Testnet',
  ARBITRUM_ONE: 'Arbitrum One',
  ARBITRUM_SEPOLIA: 'Arbitrum Sepolia Testnet',
  BASE: 'Base',
  BASE_SEPOLIA: 'Base Sepolia Testnet',
  ZKSYNC_MAINNET: 'zkSync Mainnet',
  ZKSYNC_SEPOLIA: 'zkSync Sepolia Testnet',
  ETHERLINK_TESTNET: 'Etherlink Testnet',
} as const;

export const EVM_NETWORKS_BY_CHAIN_ID: { [key: string]: IChainInfoEvm } = {
  '1': {
    chainId: 1,
    network: 'ethereum',
    isMainnet: true,
    networkName: NETWORK_NAMES.ETHEREUM,
    name: 'Ethereum',
    currency: 'ETH',
    onramperCurrency: 'ETH',
    tokenCompatibility: 'ERC-20',
    blockExplorer: 'https://etherscan.io',
    tokenIcon: LogoEthereum,
    blockchainIcon: LogoEthereum,
    transactionFormat: 'EVM',
    minDefaultGasLimit: 21000,
    maxDefaultGasLimit: 91000,
  },
  '5': {
    chainId: 5,
    network: 'goerli',
    isMainnet: false,
    networkName: NETWORK_NAMES.GOERLI,
    name: 'Ethereum',
    currency: 'ETH',
    onramperCurrency: 'ETH',
    tokenCompatibility: 'ERC-20',
    blockExplorer: 'https://goerli.etherscan.io',
    tokenIcon: LogoEthereum,
    blockchainIcon: LogoEthereum,
    faucetUrl: 'https://goerlifaucet.com/',
    transactionFormat: 'EVM',
    minDefaultGasLimit: 21000,
    maxDefaultGasLimit: 91000,
  },
  '11155111': {
    chainId: 11155111,
    network: 'sepolia',
    isMainnet: false,
    networkName: NETWORK_NAMES.SEPOLIA,
    name: 'Sepolia Testnet',
    currency: 'ETH',
    onramperCurrency: 'ETH',
    tokenCompatibility: 'ERC-20',
    blockExplorer: 'https://sepolia.etherscan.io',
    tokenIcon: LogoEthereum,
    blockchainIcon: LogoEthereum,
    faucetUrl: 'https://sepoliafaucet.com/',
    transactionFormat: 'EVM',
    minDefaultGasLimit: 21000,
    maxDefaultGasLimit: 91000,
  },
  '137': {
    chainId: 137,
    network: 'polygon-mainnet',
    isMainnet: true,
    networkName: NETWORK_NAMES.POLYGON,
    name: 'Polygon',
    currency: 'POL',
    onramperCurrency: 'matic_polygon',
    tokenCompatibility: 'Polygon',
    blockExplorer: 'https://polygonscan.com',
    gasStationUrl: 'https://gasstation.polygon.technology/v2',
    tokenIcon: LogoPolygon,
    blockchainIcon: LogoPolygon,
    transactionFormat: 'EVM',
    minDefaultGasLimit: 21000,
    maxDefaultGasLimit: 91000,
  },
  '80001': {
    chainId: 80001,
    network: 'polygon-mumbai',
    isMainnet: false,
    networkName: NETWORK_NAMES.POLYGON_MUMBAI,
    name: 'Polygon',
    currency: 'POL',
    onramperCurrency: 'matic_polygon',
    tokenCompatibility: 'Polygon',
    blockExplorer: 'https://mumbai.polygonscan.com',
    gasStationUrl: 'https://gasstation-testnet.polygon.technology/v2',
    tokenIcon: LogoPolygon,
    blockchainIcon: LogoPolygon,
    faucetUrl: 'https://faucet.polygon.technology/',
    transactionFormat: 'EVM',
    minDefaultGasLimit: 21000,
    maxDefaultGasLimit: 91000,
  },
  '80002': {
    chainId: 80002,
    network: 'polygon-amoy',
    isMainnet: false,
    networkName: NETWORK_NAMES.POLYGON_AMOY,
    name: 'Polygon',
    currency: 'POL',
    onramperCurrency: 'matic_polygon',
    tokenCompatibility: 'Polygon',
    blockExplorer: 'https://www.oklink.com/amoy',
    tokenIcon: LogoPolygon,
    blockchainIcon: LogoPolygon,
    faucetUrl: 'https://faucet.polygon.technology/',
    transactionFormat: 'EVM',
    minDefaultGasLimit: 21000,
    maxDefaultGasLimit: 91000,
  },
  '420': {
    chainId: 420,
    network: 'optimistic-goerli',
    isMainnet: false,
    networkName: NETWORK_NAMES.OPTIMISM_GOERLI,
    name: 'Ethereum',
    currency: 'ETH',
    onramperCurrency: 'eth_optimism',
    tokenCompatibility: 'ETH',
    blockExplorer: 'https://blockscout.com/optimism/goerli',
    tokenIcon: LogoOptimism,
    blockchainIcon: LogoOptimism,
    faucetUrl: 'https://community.optimism.io/docs/useful-tools/faucets/',
    transactionFormat: 'EVM',
    minDefaultGasLimit: 21000,
    maxDefaultGasLimit: 91000,
  },
  '10': {
    chainId: 10,
    network: 'optimistic-mainnet',
    isMainnet: true,
    networkName: NETWORK_NAMES.OPTIMISM,
    name: 'Ethereum',
    currency: 'ETH',
    onramperCurrency: 'eth_optimism',
    tokenCompatibility: 'ETH',
    blockExplorer: 'https://optimistic.etherscan.io',
    tokenIcon: LogoOptimism,
    blockchainIcon: LogoOptimism,
    transactionFormat: 'EVM',
    minDefaultGasLimit: 21000,
    maxDefaultGasLimit: 91000,
  },
  '7000': {
    chainId: 7000,
    network: 'zeta-mainnet',
    isMainnet: true,
    networkName: 'Zeta',
    name: 'Zeta',
    currency: 'ZETA',
    onramperCurrency: 'ZETA',
    tokenCompatibility: 'ERC-20',
    blockExplorer: 'https://explorer.zetachain.com',
    tokenIcon: LogoZetachain,
    blockchainIcon: LogoZetachain,
    transactionFormat: 'EVM',
    minDefaultGasLimit: 21000,
    maxDefaultGasLimit: 91000,
  },
  // Note. Zeta Testnet doesn't have a faucet website. Please follow this instruction.
  // https://www.zetachain.com/docs/reference/get-testnet-zeta/#how-to-get-testnet-zeta
  '7001': {
    chainId: 7001,
    network: 'zeta-testnet',
    isMainnet: true,
    networkName: 'Zeta Testnet',
    name: 'Zeta',
    currency: 'aZETA',
    onramperCurrency: 'aZETA',
    tokenCompatibility: 'ERC-20',
    blockExplorer: 'https://zetachain-athens-3.blockscout.com',
    tokenIcon: LogoZetachain,
    blockchainIcon: LogoZetachain,
    transactionFormat: 'EVM',
    minDefaultGasLimit: 21000,
    maxDefaultGasLimit: 91000,
  },
  '88888': {
    chainId: 88888,
    network: 'chiliz-mainnet',
    isMainnet: true,
    networkName: 'Chiliz',
    name: 'Chiliz',
    currency: 'CHZ',
    onramperCurrency: 'CHZ',
    tokenCompatibility: 'ERC-20',
    blockExplorer: 'https://scan.chiliz.com',
    tokenIcon: LogoChiliz,
    blockchainIcon: LogoChiliz,
    transactionFormat: 'EVM',
    minDefaultGasLimit: 21000,
    maxDefaultGasLimit: 91000,
  },
  '88882': {
    chainId: 88882,
    network: 'chiliz-testnet',
    isMainnet: true,
    networkName: 'Spicy Testnet',
    name: 'Chiliz',
    currency: 'CHZ',
    onramperCurrency: 'CHZ',
    tokenCompatibility: 'ERC-20',
    blockExplorer: 'https://spicy-explorer.chiliz.com',
    tokenIcon: LogoChiliz,
    blockchainIcon: LogoChiliz,
    transactionFormat: 'EVM',
    minDefaultGasLimit: 21000,
    maxDefaultGasLimit: 91000,
  },
  '99': {
    chainId: 99,
    network: 'poa-mainnet',
    isMainnet: true,
    networkName: 'POA',
    name: 'POA',
    currency: 'POA',
    onramperCurrency: 'POA',
    tokenCompatibility: 'ERC-20',
    blockExplorer: 'https://blockscout.com/poa/core',
    tokenIcon: LogoPoa,
    blockchainIcon: LogoPoa,
    transactionFormat: 'EVM',
    minDefaultGasLimit: 21000,
    maxDefaultGasLimit: 91000,
  },
  '77': {
    chainId: 77,
    network: 'poa-testnet',
    isMainnet: false,
    networkName: 'Sokol Testnet',
    name: 'POA',
    currency: 'POA',
    onramperCurrency: 'POA',
    tokenCompatibility: 'ERC-20',
    blockExplorer: 'https://blockscout.sokol.arianee.net',
    tokenIcon: LogoPoa,
    blockchainIcon: LogoPoa,
    transactionFormat: 'EVM',
    minDefaultGasLimit: 21000,
    maxDefaultGasLimit: 91000,
  },
  '101010': {
    chainId: 101010,
    network: 'global-trust-network', // stability mainnet
    isMainnet: true,
    networkName: 'Global Trust Network',
    name: 'Stability',
    currency: '-', // no native token
    onramperCurrency: 'SUSD',
    tokenCompatibility: 'ERC-20',
    blockExplorer: 'https://globaltrustnetwork.blockscout.com/',
    tokenIcon: LogoStability,
    blockchainIcon: LogoStability,
    transactionFormat: 'Stability',
    minDefaultGasLimit: 21000,
    maxDefaultGasLimit: 260000000,
  },
  '20180427': {
    chainId: 20180427,
    network: 'stability-testnet',
    isMainnet: false,
    networkName: 'Stability Testnet',
    name: 'Stability',
    currency: 'SUSD', // Fake: https://stability-betanet.blockscout.com/token/0xC814444DecA35e56c59b51C858c26213d6977F90
    onramperCurrency: 'SUSD',
    tokenCompatibility: 'ERC-20',
    blockExplorer: 'https://stability-testnet.blockscout.com',
    tokenIcon: LogoStability,
    blockchainIcon: LogoStability,
    transactionFormat: 'Stability',
    minDefaultGasLimit: 21000,
    maxDefaultGasLimit: 260000000,
  },
  '56': {
    chainId: 56,
    network: 'bnb-smart-chain-mainnet',
    isMainnet: true,
    networkName: 'BNB Smart Chain',
    name: 'BNB',
    currency: 'BNB',
    onramperCurrency: 'bnb_bsc',
    tokenCompatibility: 'ERC-20',
    blockExplorer: 'https://bscscan.com',
    tokenIcon: LogoBnb,
    blockchainIcon: LogoBnb,
    transactionFormat: 'EVM',
    minDefaultGasLimit: 21000,
    maxDefaultGasLimit: 91000,
  },
  '97': {
    chainId: 97,
    network: 'bnb-smart-chain-testnet',
    isMainnet: false,
    networkName: 'BNB Smart Chain Testnet',
    name: 'BNB',
    currency: 'BNB',
    onramperCurrency: 'bnb_bsc',
    tokenCompatibility: 'ERC-20',
    blockExplorer: 'https://testnet.bscscan.com',
    tokenIcon: LogoBnb,
    blockchainIcon: LogoBnb,
    faucetUrl: 'https://faucet.quicknode.com/binance-smart-chain/bnb-testnet',
    transactionFormat: 'EVM',
    minDefaultGasLimit: 21000,
    maxDefaultGasLimit: 91000,
  },
  // TODO: base needs custom tx handling - currently using Ethereum gas prices
  '8453': {
    chainId: 8453,
    network: 'base-mainnet',
    isMainnet: true,
    networkName: NETWORK_NAMES.BASE,
    name: 'Ethereum',
    currency: 'ETH',
    onramperCurrency: 'eth_base',
    tokenCompatibility: 'ERC-20',
    blockExplorer: 'https://basescan.org',
    tokenIcon: LogoEthereum,
    blockchainIcon: LogoBase,
    transactionFormat: 'EVM',
    maxDefaultGasLimit: 52000,
    minDefaultGasLimit: 21000,
  },
  '84531': {
    chainId: 84531,
    network: 'base-goerli',
    isMainnet: false,
    networkName: 'Base Goerli Testnet',
    name: 'Ethereum',
    currency: 'ETH',
    onramperCurrency: 'ETH',
    tokenCompatibility: 'ERC-20',
    blockExplorer: 'https://goerli.basescan.org',
    tokenIcon: LogoEthereum,
    blockchainIcon: LogoBase,
    faucetUrl: 'https://faucet.quicknode.com/base/goerli',
    transactionFormat: 'EVM',
    maxDefaultGasLimit: 52000,
    minDefaultGasLimit: 21000,
  },
  '84532': {
    chainId: 84532,
    network: 'base-sepolia',
    isMainnet: false,
    networkName: NETWORK_NAMES.BASE_SEPOLIA,
    name: 'Ethereum',
    currency: 'ETH',
    onramperCurrency: 'ETH',
    tokenCompatibility: 'ERC-20',
    blockExplorer: 'https://sepolia-explorer.base.org',
    tokenIcon: LogoEthereum,
    blockchainIcon: LogoBase,
    faucetUrl: 'https://faucet.quicknode.com/base/sepolia',
    transactionFormat: 'EVM',
    maxDefaultGasLimit: 52000,
    minDefaultGasLimit: 21000,
  },
  '42161': {
    chainId: 42161,
    network: 'arbitrum-one',
    isMainnet: true,
    networkName: NETWORK_NAMES.ARBITRUM_ONE,
    name: 'Ethereum',
    currency: 'ETH',
    onramperCurrency: 'ETH',
    tokenCompatibility: 'ERC-20',
    blockExplorer: 'https://arbiscan.io',
    tokenIcon: LogoEthereum,
    blockchainIcon: LogoArbitrumOne,
    transactionFormat: 'EVM',
    minDefaultGasLimit: 21000,
    maxDefaultGasLimit: 52000,
  },
  '421614': {
    chainId: 421614,
    network: 'arbitrum-sepolia',
    isMainnet: false,
    networkName: NETWORK_NAMES.ARBITRUM_SEPOLIA,
    name: 'Ethereum',
    currency: 'ETH',
    onramperCurrency: 'ETH',
    tokenCompatibility: 'ERC-20',
    blockExplorer: 'https://sepolia.arbiscan.io',
    tokenIcon: LogoEthereum,
    blockchainIcon: LogoArbitrum,
    faucetUrl: 'https://faucet.quicknode.com/arbitrum/sepolia',
    transactionFormat: 'EVM',
    minDefaultGasLimit: 21000,
    maxDefaultGasLimit: 52000,
  },
  '324': {
    chainId: 324,
    network: 'zksync-mainnet',
    isMainnet: true,
    networkName: NETWORK_NAMES.ZKSYNC_MAINNET,
    name: 'Ethereum',
    currency: 'ETH',
    onramperCurrency: 'ETH',
    tokenCompatibility: 'ERC-20',
    blockExplorer: 'https://explorer.zksync.io',
    tokenIcon: LogoEthereum,
    blockchainIcon: LogoZksync,
    transactionFormat: 'EVM',
    minDefaultGasLimit: 21000,
    maxDefaultGasLimit: 91000,
  },
  '300': {
    chainId: 300,
    network: 'zksync-sepolia',
    isMainnet: false,
    networkName: NETWORK_NAMES.ZKSYNC_SEPOLIA,
    name: 'Ethereum',
    currency: 'ETH',
    onramperCurrency: 'ETH',
    tokenCompatibility: 'ERC-20',
    blockExplorer: 'https://sepolia.explorer.zksync.io',
    tokenIcon: LogoEthereum,
    blockchainIcon: LogoZksync,
    faucetUrl: 'https://faucet.chainstack.com/zksync-testnet-faucet',
    transactionFormat: 'EVM',
    minDefaultGasLimit: 21000,
    maxDefaultGasLimit: 91000,
  },
  '128123': {
    chainId: 128123,
    network: 'etherlink-testnet',
    isMainnet: false,
    networkName: NETWORK_NAMES.ETHERLINK_TESTNET,
    name: 'Tezos',
    currency: 'XTZ',
    onramperCurrency: 'XTZ',
    tokenCompatibility: 'ERC-20',
    blockExplorer: 'https://testnet-explorer.etherlink.com/',
    tokenIcon: LogoTezos,
    blockchainIcon: LogoEtherlink,
    faucetUrl: 'https://faucet.etherlink.com/',
    transactionFormat: 'EVM',
    minDefaultGasLimit: 621000,
    maxDefaultGasLimit: 2500000,
  },
};

export const LEDGER_NETWORKS: { [key: string]: { [key: string]: IChainInfoEvm | IChainInfoFlow } } = {
  [WalletType.FLOW]: {
    mainnet: {
      chainId: 1,
      network: 'FLOW',
      isMainnet: true,
      networkName: 'Flow',
      name: 'Flow',
      currency: 'FLOW',
      onramperCurrency: 'FLOW',
      tokenCompatibility: 'FUSD',
      blockExplorer: 'https://www.flowdiver.io',
      tokenIcon: LogoFlow,
      blockchainIcon: LogoFlow,
    },
    testnet: {
      chainId: 2,
      network: 'FLOW',
      isMainnet: false,
      networkName: 'Flow Testnet',
      name: 'Flow',
      currency: 'FLOW',
      onramperCurrency: 'FLOW',
      tokenCompatibility: 'FUSD',
      blockExplorer: 'https://testnet.flowdiver.io',
      tokenIcon: LogoFlow,
      blockchainIcon: LogoFlow,
      faucetUrl: 'https://testnet-faucet.onflow.org/fund-account',
    },
  },
  [WalletType.ETH]: EVM_NETWORKS_BY_CHAIN_ID,
};
